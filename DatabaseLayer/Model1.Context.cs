//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HotelBookingsEntities : DbContext
    {
        public HotelBookingsEntities()
            : base("name=HotelBookingsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<checkout> checkouts { get; set; }
        public virtual DbSet<Customeraddress> Customeraddresses { get; set; }
        public virtual DbSet<CustomerRegestration> CustomerRegestrations { get; set; }
        public virtual DbSet<Hotelreview> Hotelreviews { get; set; }
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
    
        public virtual int sp_REGISTERCUSTOMER(Nullable<int> task, string firstNAME, string lastNAME, string eMAILID, string pHONE)
        {
            var taskParameter = task.HasValue ?
                new ObjectParameter("Task", task) :
                new ObjectParameter("Task", typeof(int));
    
            var firstNAMEParameter = firstNAME != null ?
                new ObjectParameter("FirstNAME", firstNAME) :
                new ObjectParameter("FirstNAME", typeof(string));
    
            var lastNAMEParameter = lastNAME != null ?
                new ObjectParameter("LastNAME", lastNAME) :
                new ObjectParameter("LastNAME", typeof(string));
    
            var eMAILIDParameter = eMAILID != null ?
                new ObjectParameter("EMAILID", eMAILID) :
                new ObjectParameter("EMAILID", typeof(string));
    
            var pHONEParameter = pHONE != null ?
                new ObjectParameter("PHONE", pHONE) :
                new ObjectParameter("PHONE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_REGISTERCUSTOMER", taskParameter, firstNAMEParameter, lastNAMEParameter, eMAILIDParameter, pHONEParameter);
        }
    }
}
